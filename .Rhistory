"CD14+ Monocytes",#cluster 1
"B cells", #cluster 2
"CD8 T cells",  #3
"FCGR3A+ Monocytes",  #4
"NK cells", #5
"Dendritic cells", #6
"Megakaryocytes") #7
# Display tSNE plot: TSNEPlot
pbmc@ident <- plyr::mapvalues(pbmc@ident, from = current.cluster.ids, to = new.cluster.ids)
# See slides related to cluster biomarkers for details.
TSNEPlot(pbmc, do.label = TRUE, pt.size = 0.5, seed.use=1)
knitr::opts_chunk$set(echo = TRUE)
library(plotly)
library(crosstalk)
library(reshape2)
# read and prepare the data
st <- read.table('flunet2010_11countries.csv', sep=',', header=T, stringsAsFactors=F)
# additional data to be used for some visualizations
d1 <- data.frame(country=c("Afghanistan","Argentina",
"Australia","Canada", "China",
"Colombia", "Egypt", "Germany",
"Ireland", "South.Africa", "USA"),
continent=c('Asia', 'South America', 'Australia', 'North America',
'Asia', 'South America', 'Africa', 'Europe', 'Europe',
'Africa', 'North America'),
hemisphere=c('Northern', 'Southern', 'Southern', 'Northern', 'Northern',
'Northern', 'Northern', 'Northern', 'Northern', 'Southern',
'Northern'),
code=c("AFG","ARG",
"AUS","CAN", "CHN",
"COL", "EGY", "DEU",
"IRL", "ZAF", "USA"),
stringsAsFactors=FALSE)
# reshape table from wide to long format
lst <- melt(st, id.vars=1:1, variable.name="country", value.name="count")
# map additional data to data frame
lst$continent <- d1$continent[match(lst$country, d1$country)]
lst$hemisphere <- d1$hemisphere[match(lst$country, d1$country)]
lst$code <- d1$code[match(lst$country, d1$country)]
base2 <- plot_ly(sd1)
sd1 <- SharedData$new(lst)
base1 <- plot_ly(sd1)
base2 <- plot_ly(sd1)
p1 <-
base1 %>%
hide_legend() %>%
add_lines( x=~week, y=~count, color=~country, colors = "Dark2") %>%
add_markers( x=~week, y=~count, color=~country, colors = "Dark2")
# 1. create a stacked bar chart
p2 <-
base2 %>%
hide_legend() %>%
add_trace(x=~week, y=~count) %>%
layout(barmode = 'stack')
p2
# 1. create a stacked bar chart
p2 <-
base2 %>%
hide_legend() %>%
add_bars(x=~week, y=~count) %>%
layout(barmode = 'stack')
p2
# 1. create a stacked bar chart
p2 <-
base2 %>%
hide_legend() %>%
add_bars(x=~week, y=~count, color="grey") %>%
layout(barmode = 'stack')
p2
sd1 <- SharedData$new(lst)
base1 <- plot_ly(sd1)
base2 <- plot_ly(sd1)
p1 <-
base1 %>%
hide_legend() %>%
add_lines( x=~week, y=~count, color=~country, colors = "Dark2") %>%
add_markers( x=~week, y=~count, color=~country, colors = "Dark2")
# 1. create a stacked bar chart
p2 <-
base2 %>%
hide_legend() %>%
add_bars(x=~week, y=~count, color="gray") %>%
layout(barmode = 'stack')
plot_ly(data, x = ~Animals, y = ~SF_Zoo, type = 'bar', name = 'SF Zoo') %>%
add_trace(y = ~LA_Zoo, name = 'LA Zoo') %>%
layout(yaxis = list(title = 'Count'), barmode = 'stack')
# 1. create a stacked bar chart
p2 <-
base2 %>%
hide_legend() %>%
add_bars(x=~week, y=~count, color="gray") %>%
layout(barmode = 'stack')
p2
# 1. create a stacked bar chart
p2 <-
base2 %>%
hide_legend() %>%
add_bars(x=~week, y=~count, marker = list(color = 'gray')) %>%
layout(barmode = 'stack')
p2
# 3. add the slider control to filter weeks to this bscols configuration
bscols(
widths=c(3,9),
list(
filter_select('count', 'Country', sd1, ~country ),),
sub1) # 4. replace this plot with your subplot object
sd1 <- SharedData$new(lst)
base1 <- plot_ly(sd1)
base2 <- plot_ly(sd1)
p1 <-
base1 %>%
hide_legend() %>%
add_lines( x=~week, y=~count, color=~country, colors = "Dark2") %>%
add_markers( x=~week, y=~count, color=~country, colors = "Dark2")
# 1. create a stacked bar chart
p2 <-
base2 %>%
hide_legend() %>%
add_bars(x=~week, y=~count, marker = list(color = 'gray')) %>%
layout(barmode = 'stack')
# 2. create a subplot to link the two plots
sub1 <- subplot(p1,p2,shareX=T)
# 3. add the slider control to filter weeks to this bscols configuration
bscols(
widths=c(3,9),
list(
filter_select('count', 'Country', sd1, ~country ),
filter_slider('weeks', 'Weeks', sd1, ~week, width = "100%"),),
sub1) # 4. replace this plot with your subplot object
sd1 <- SharedData$new(lst)
base1 <- plot_ly(sd1)
base2 <- plot_ly(sd1)
p1 <-
base1 %>%
hide_legend() %>%
add_lines( x=~week, y=~count, color=~country, colors = "Dark2") %>%
add_markers( x=~week, y=~count, color=~country, colors = "Dark2")
# 1. create a stacked bar chart
p2 <-
base2 %>%
hide_legend() %>%
add_bars(x=~week, y=~count, marker = list(color = 'gray')) %>%
layout(barmode = 'stack')
# 2. create a subplot to link the two plots
sub1 <- subplot(p1,p2,shareX=T)
# 3. add the slider control to filter weeks to this bscols configuration
bscols(
widths=c(3,9),
list(
filter_select('count', 'Country', sd1, ~country ),
filter_slider('weeks', 'Weeks', sd1, ~week, width = "100%")),
sub1) # 4. replace this plot with your subplot object
sd1 <- SharedData$new(lst)
base1 <- plot_ly(sd1)
base2 <- plot_ly(sd1)
p1 <-
base1 %>%
hide_legend() %>%
add_lines( x=~week, y=~count, color=~country, colors = "Dark2") %>%
add_markers( x=~week, y=~count, color=~country, colors = "Dark2")
# 1. create a stacked bar chart
p2 <-
base2 %>%
hide_legend() %>%
add_bars(x=~week, y=~count, marker = list(color = 'gray')) %>%
layout(barmode = 'stack')
# 2. create a subplot to link the two plots
sub1 <- subplot(p1,p2,shareX=T,nrows=2)
# 3. add the slider control to filter weeks to this bscols configuration
bscols(
widths=c(3,9),
list(
filter_select('count', 'Country', sd1, ~country ),
filter_slider('weeks', 'Weeks', sd1, ~week, width = "100%")),
sub1) # 4. replace this plot with your subplot object
sd1 <- SharedData$new(lst)
base1 <- plot_ly(sd1)
base2 <- plot_ly(sd1)
p1 <-
base1 %>%
hide_legend() %>%
add_lines( x=~week, y=~count, color=~country, colors = "Dark2") %>%
add_markers( x=~week, y=~count, color=~country, colors = "Dark2")
# 1. create a stacked bar chart
p2 <-
base2 %>%
hide_legend() %>%
add_bars(x=~week, y=~count, marker = list(color = 'gray')) %>%
layout(barmode = 'stack')
# 2. create a subplot to link the two plots
sub1 <- subplot(p1,p2,shareX=T,nrows=2,title = "Flu Cases by Country and Totals")
sd1 <- SharedData$new(lst)
base1 <- plot_ly(sd1)
base2 <- plot_ly(sd1)
p1 <-
base1 %>%
hide_legend() %>%
add_lines( x=~week, y=~count, color=~country, colors = "Dark2") %>%
add_markers( x=~week, y=~count, color=~country, colors = "Dark2")
# 1. create a stacked bar chart
p2 <-
base2 %>%
hide_legend() %>%
add_bars(x=~week, y=~count, marker = list(color = 'gray')) %>%
layout(barmode = 'stack')
# 2. create a subplot to link the two plots
sub1 <- subplot(p1,p2,shareX=T,nrows=2) %>%
layout(title="Flu Cases by Country and Totals")
# 3. add the slider control to filter weeks to this bscols configuration
bscols(
widths=c(3,9),
list(
filter_select('count', 'Country', sd1, ~country ),
filter_slider('weeks', 'Weeks', sd1, ~week, width = "100%")),
sub1) # 4. replace this plot with your subplot object
sd1 <- SharedData$new(lst)
base1 <- plot_ly(sd1)
p1 <-
base1 %>%
hide_legend() %>%
add_lines( x=~week, y=~count, color=~country, colors = "Dark2") %>%
add_markers( x=~week, y=~count, color=~country, colors = "Dark2")
# 1. create a stacked bar chart
p2 <-
base1 %>%
hide_legend() %>%
add_bars(x=~week, y=~count, marker = list(color = 'gray')) %>%
layout(barmode = 'stack')
# 2. create a subplot to link the two plots
sub1 <- subplot(p1,p2,shareX=T,nrows=2) %>%
layout(title="Flu Cases by Country and Totals")
# 3. add the slider control to filter weeks to this bscols configuration
bscols(
widths=c(3,9),
list(
filter_select('count', 'Country', sd1, ~country ),
filter_slider('weeks', 'Weeks', sd1, ~week, width = "100%")),
sub1) # 4. replace this plot with your subplot object
sd2 <- SharedData$new(lst)
base2 <- plot_ly(sd2)
p3 <-
base2 %>%
hide_legend() %>%
add_bars(x=~week, y=~count, color=~country, colors = "Dark2") %>%
layout(barmode = 'stack',
xaxis = list(rangeslider = list(type = "numeric")),
yaxis = list(title = "cases"))
bscols(
widths=c(3,9),
list(
filter_checkbox('count', 'Country', sd1, ~country)),
sub1)
sd2 <- SharedData$new(lst)
base2 <- plot_ly(sd2)
p3 <-
base2 %>%
hide_legend() %>%
add_bars(x=~week, y=~count, color=~country, colors = "Dark2") %>%
layout(barmode = 'stack',
xaxis = list(rangeslider = list(type = "numeric")),
yaxis = list(title = "cases"))
bscols(
widths=c(3,9),
list(
filter_checkbox('count', 'Country', sd1, ~country)),
p3)
sd2 <- SharedData$new(lst)
base2 <- plot_ly(sd2)
p3 <-
base2 %>%
hide_legend() %>%
add_bars(x=~week, y=~count, color=~country, colors = "Dark2") %>%
layout(barmode = 'stack',
xaxis = list(rangeslider = list(type = "numeric")),
yaxis = list(title = "cases"))
bscols(
widths=c(3,9),
list(
filter_checkbox('count', 'Continent', sd1, ~continent)),
p3)
sd2 <- SharedData$new(lst)
base2 <- plot_ly(sd2)
p3 <-
base2 %>%
hide_legend() %>%
add_bars(x=~week, y=~count, color=~country, colors = "Dark2") %>%
layout(barmode = 'stack',
xaxis = list(rangeslider = list(type = "numeric")),
yaxis = list(title = "cases"))
bscols(
widths=c(3,9),
list(
filter_checkbox('count', 'Continent', sd1, ~count)),
p3)
sd2 <- SharedData$new(lst)
base2 <- plot_ly(sd2)
p3 <-
base2 %>%
hide_legend() %>%
add_bars(x=~week, y=~count, color=~country, colors = "Dark2") %>%
layout(barmode = 'stack',
xaxis = list(rangeslider = list(type = "numeric")),
yaxis = list(title = "cases"))
bscols(
widths=c(3,9),
list(
filter_checkbox('count', 'Continent', sd1, ~continent)),
p3)
sd2 <- SharedData$new(lst)
base2 <- plot_ly(sd2)
p3 <-
base2 %>%
hide_legend() %>%
add_bars(x=~week, y=~count, color=~country, colors = "Dark2") %>%
layout(barmode = 'stack',
xaxis = list(rangeslider = list(type = "numeric")),
yaxis = list(title = "cases"),
title = "Flu Cases by Country")
bscols(
widths=c(3,9),
list(
filter_checkbox('count', 'Continent', sd1, ~continent)),
p3)
sd2 <- SharedData$new(lst)
base2 <- plot_ly(sd2)
p3 <-
base2 %>%
hide_legend() %>%
add_bars(x=~week, y=~count, color=~country, colors = "Dark2") %>%
layout(barmode = 'stack',
xaxis = list(rangeslider = list(type = "numeric")),
yaxis = list(title = "cases"),
title = "Flu Cases by Country")
bscols(
widths=c(3,9),
list(
filter_checkbox('count', 'Continent', sd2, ~continent)),
p3)
sd3 <- SharedData$new(lst, key=~country)
base3 <- plot_ly(sd3) %>% group_by(country)
p5 <-
base3 %>%
group_by(country) %>%
summarise(totals = sum(count))
p5 <-
base3 %>%
group_by(country) %>%
summarise(totals = sum(count)) %>%
hide_legend() %>%
add_bars(x=~totals, y=~country, marker = list(color = 'gray'))
p5
p5 <-
base3 %>%
group_by(country) %>%
summarise(totals = sum(count)) %>%
arrange(totals) %>%
hide_legend() %>%
add_bars(x=~totals, y=~country, marker = list(color = 'gray'))
p5
p5 <-
base3 %>%
group_by(country) %>%
summarise(totals = sum(count)) %>%
arrange(desc(totals)) %>%
hide_legend() %>%
add_bars(x=~totals, y=~country, marker = list(color = 'gray'))
p5
setwd("~/Documents/Harvard DBMI/Courses/BMI 706 Data Visualization for Biomedical Data/bmi706-visualization-project")
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
iddr <- read_csv("Impaired_Driving_Death_Rate__by_Age_and_Gender__2012___2014__All_States.csv")
iddr <- read_csv("data/Impaired_Driving_Death_Rate__by_Age_and_Gender__2012___2014__All_States.csv")
setwd("~/Documents/Harvard DBMI/Courses/BMI 706 Data Visualization for Biomedical Data/bmi706-visualization-project")
iddr <- read_csv("data/Impaired_Driving_Death_Rate__by_Age_and_Gender__2012___2014__All_States.csv")
setwd("~/Documents/Harvard DBMI/Courses/BMI 706 Data Visualization for Biomedical Data/bmi706-visualization-project")
iddr <- read_csv("data/Impaired_Driving_Death_Rate__by_Age_and_Gender__2012___2014__All_States.csv")
setwd("~/Documents/Harvard DBMI/Courses/BMI 706 Data Visualization for Biomedical Data/bmi706-visualization-project/doc")
setwd("~/Documents/Harvard DBMI/Courses/BMI 706 Data Visualization for Biomedical Data/bmi706-visualization-project")
setwd("../")
iddr <- read_csv("data/Impaired_Driving_Death_Rate__by_Age_and_Gender__2012___2014__All_States.csv")
ocdr <- read_csv("data/Motor_Vehicle_Occupant_Death_Rate__by_Age_and_Gender__2012___2014__All_States.csv")
sebt <- read_csv("data/Percentage_of_Drivers_and_Front_Seat_Passengers_Wearing_Seat_Belts__2012___2014__All_States.csv")
setwd("../")
iddr <- read_csv("data/Impaired_Driving_Death_Rate__by_Age_and_Gender__2012___2014__All_States.csv")
ocdr <- read_csv("data/Motor_Vehicle_Occupant_Death_Rate__by_Age_and_Gender__2012___2014__All_States.csv")
sebt <- read_csv("data/Percentage_of_Drivers_and_Front_Seat_Passengers_Wearing_Seat_Belts__2012___2014__All_States.csv")
head(iddr)
head(iddr)
View(iddr)
iddr %>%
summary()
ocdr %>%
summary()
sebt %>%
summary()
p5 <-
base3 %>%
group_by(country) %>%
summarise(totals = sum(count)) %>%
arrange(desc(totals)) %>%
hide_legend() %>%
add_bars(x=~totals, y=~country, marker = list(color = 'gray'))
p5
base3 %>%
group_by(country) %>%
summarise(totals = sum(count)) %>%
arrange(desc(totals))
knitr::opts_chunk$set(echo = TRUE)
library(plotly)
library(crosstalk)
library(reshape2)
# read and prepare the data
st <- read.table('flunet2010_11countries.csv', sep=',', header=T, stringsAsFactors=F)
# additional data to be used for some visualizations
d1 <- data.frame(country=c("Afghanistan","Argentina",
"Australia","Canada", "China",
"Colombia", "Egypt", "Germany",
"Ireland", "South.Africa", "USA"),
continent=c('Asia', 'South America', 'Australia', 'North America',
'Asia', 'South America', 'Africa', 'Europe', 'Europe',
'Africa', 'North America'),
hemisphere=c('Northern', 'Southern', 'Southern', 'Northern', 'Northern',
'Northern', 'Northern', 'Northern', 'Northern', 'Southern',
'Northern'),
code=c("AFG","ARG",
"AUS","CAN", "CHN",
"COL", "EGY", "DEU",
"IRL", "ZAF", "USA"),
stringsAsFactors=FALSE)
# reshape table from wide to long format
lst <- melt(st, id.vars=1:1, variable.name="country", value.name="count")
# map additional data to data frame
lst$continent <- d1$continent[match(lst$country, d1$country)]
lst$hemisphere <- d1$hemisphere[match(lst$country, d1$country)]
lst$code <- d1$code[match(lst$country, d1$country)]
sd1 <- SharedData$new(lst)
base1 <- plot_ly(sd1)
p1 <-
base1 %>%
hide_legend() %>%
add_lines( x=~week, y=~count, color=~country, colors = "Dark2") %>%
add_markers( x=~week, y=~count, color=~country, colors = "Dark2")
# 1. create a stacked bar chart
p2 <-
base1 %>%
hide_legend() %>%
add_bars(x=~week, y=~count, marker = list(color = 'gray')) %>%
layout(barmode = 'stack')
# 2. create a subplot to link the two plots
sub1 <- subplot(p1,p2,shareX=T,nrows=2) %>%
layout(title="Flu Cases by Country and Totals")
# 3. add the slider control to filter weeks to this bscols configuration
bscols(
widths=c(3,9),
list(
filter_select('count', 'Country', sd1, ~country ),
filter_slider('weeks', 'Weeks', sd1, ~week, width = "100%")),
sub1) # 4. replace this plot with your subplot object
sd2 <- SharedData$new(lst)
base2 <- plot_ly(sd2)
p3 <-
base2 %>%
hide_legend() %>%
add_bars(x=~week, y=~count, color=~country, colors = "Dark2") %>%
layout(barmode = 'stack',
xaxis = list(rangeslider = list(type = "numeric")),
yaxis = list(title = "cases"),
title = "Flu Cases by Country")
bscols(
widths=c(3,9),
list(
filter_checkbox('count', 'Continent', sd2, ~continent)),
p3)
sd3 <- SharedData$new(lst, key=~country)
base3 <- plot_ly(sd3) %>% group_by(country)
p4 <-
base3 %>%
hide_legend() %>%
add_lines(x=~week, y=~count, color=~country, colors = "Dark2")
base3 %>%
group_by(country) %>%
summarise(totals = sum(count)) %>%
arrange(desc(totals))
lst %>% group_by(country) %>% summarise(totals = sum(count))
lst %>% group_by(country) %>% summarise(totals = sum(count,rm.na=T))
lst %>% group_by(country) %>% summarise(totals = sum(count,na.rm=T))
lst %>% group_by(country) %>% summarise(totals = sum(count,na.rm=T)) %>% arrange(desc(totals))
base3 %>%
group_by(country) %>%
summarise(totals = sum(count, na.rm=T)) %>%
arrange(desc(totals)) %>%
hide_legend() %>%
add_bars(x=~totals, y=~country, marker = list(color = 'gray')) %>%
layout(xaxis= list(categoryorder = "array",
categoryarray = .$country))
p5 <-
base3 %>%
group_by(country) %>%
summarise(totals = sum(count, na.rm=T)) %>%
arrange(desc(totals)) %>%
hide_legend() %>%
add_bars(x=~totals, y=~country, marker = list(color = 'gray')) %>%
layout(xaxis= list(categoryorder = "array",
categoryarray = .$country))
p5
base3 %>%
group_by(country) %>%
summarise(totals = sum(count, na.rm=T)) %>%
arrange(desc(totals)) %>%
hide_legend() %>%
.$country
